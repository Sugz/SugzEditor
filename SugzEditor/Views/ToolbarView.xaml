<UserControl x:Class="SugzEditor.Views.ToolbarView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:sgzcontrols="clr-namespace:SugzTools.Controls;assembly=SugzTools" 
             xmlns:controls="clr-namespace:SugzEditor.Controls"
			 xmlns:vm="clr-namespace:SugzEditor.ViewModels"
			 mc:Ignorable="d"
             d:DesignHeight="30"
             d:DesignWidth="600" 
             DataContext="{Binding Main, Source={StaticResource Locator}}">

	<UserControl.Resources>
		
	</UserControl.Resources>
	
    <StackPanel Orientation="Horizontal"
                VerticalAlignment="Top"
                HorizontalAlignment="Left"
                WindowChrome.IsHitTestVisibleInChrome="True"
                Height="30">

        <Button Content="{DynamicResource NewFile_20x}" 
                Style="{DynamicResource ToolbarButtonStyle}" 
                ToolTip="New File (Ctrl+N)" />
        <controls:SgzSplitButton Content="{DynamicResource OpenFile_20x}" 
                                 Command="{Binding Explorer.AddFileCommand, Mode=OneWay}" 
                                 ToolTip="Add File (Ctrl+Shift+N)"
                                 ItemsSource="{Binding Explorer.RecentFiles}" 
                                 ItemTemplate="{DynamicResource RecentItemsTemplate}" 
                                 ItemContainerStyle="{DynamicResource RecentFileMenuItemStyle}"/>
        <controls:SgzSplitButton Content="{DynamicResource OpenFolder_20x}" 
                                 Command="{Binding Explorer.AddFolderCommand, Mode=OneWay}" 
                                 ToolTip="Add Folder (Ctrl+Shift+F)" 
                                 ItemsSource="{Binding Explorer.RecentFolders}" 
                                 ItemTemplate="{DynamicResource RecentItemsTemplate}" 
                                 ItemContainerStyle="{DynamicResource RecentFolderMenuItemStyle}"/>

        <!--Separator-->
        <Rectangle Width="2"
                   Margin="5,2"
                   Fill="{DynamicResource ToolbarBorderBrush}"/>
        
        <!--View-->
        <ToggleButton Content="{DynamicResource Menu_20x}"
                      IsChecked="{Binding Main.ShowMenus}"
                      Style="{DynamicResource ToolbarButtonStyle}"
                      VerticalContentAlignment="Bottom"
                      Padding="0,0,0,5" />
        <ToggleButton Content="{DynamicResource Toolbar_20x}" 
                      IsChecked="{Binding Main.ShowToolbar}" 
                      Style="{DynamicResource ToolbarButtonStyle}" 
                      Padding="0,2,0,0"/>
        <ToggleButton Content="{DynamicResource Treeview_20x}"
                      IsChecked="{Binding Main.ShowExplorer}"
                      Style="{DynamicResource ToolbarButtonStyle}"
                      VerticalContentAlignment="Bottom"
                      Padding="0,0,0,5" />
        <ToggleButton Content="{DynamicResource Tabs_20x}" 
                      IsChecked="{Binding Main.ShowTabs}" 
                      Style="{DynamicResource ToolbarButtonStyle}" 
                      VerticalContentAlignment="Bottom"
                      Padding="0,0,0,5" />
		
		<!--Separator-->
        <Rectangle Width="2"
                   Margin="5,2"
                   Fill="{DynamicResource ToolbarBorderBrush}"/>

		<!--Run Code-->
		<Button Command="{Binding ExecuteCodeCommand}"
				ToolTip="Evaluate">
			<Button.Style>
				<Style TargetType="{x:Type Button}" BasedOn="{StaticResource ToolbarButtonStyle}">
					<Style.Triggers>
						<Trigger Property="IsEnabled" Value="True">
							<Setter Property="Content" Value="{DynamicResource Run_20x}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Content" Value="{DynamicResource RunDisable_20x}" />
						</Trigger>
					</Style.Triggers>
				</Style>
			</Button.Style>
		</Button>
		<Button Command="{Binding ExecuteCodeCommand, Mode=OneWay}"
				ToolTip="Evaluate Selected">
			<Button.Style>
				<Style TargetType="{x:Type Button}" BasedOn="{StaticResource ToolbarButtonStyle}">
					<Style.Triggers>
						<Trigger Property="IsEnabled" Value="True">
							<Setter Property="Content" Value="{DynamicResource RunSelected_20x}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Content" Value="{DynamicResource RunSelectedDisable_20x}" />
						</Trigger>
					</Style.Triggers>
				</Style>
			</Button.Style>
		</Button>
		<controls:SgzSplitButton x:Name="maxInstancesBtn"
								 Command="{Binding GetMaxProcessCommand}"
								 ItemsSource="{Binding MaxProcess}" 
								 ButtonWidth="Auto"
								 AllowDisableExpand="False">
			<controls:SgzSplitButton.Content>
				<DockPanel>
					<ContentPresenter Content="{DynamicResource Refresh_20x}"
									  Margin="5,0,0,0" />
					<TextBlock Text="{Binding MaxProcessButtonText}"
							   Margin="5,2,5,0"
							   Foreground="{Binding Foreground, ElementName=maxInstancesBtn}" />
				</DockPanel>
			</controls:SgzSplitButton.Content>
			<controls:SgzSplitButton.ContextMenu>
				<ContextMenu ItemsSource="{Binding MaxInstalls}">
					<ContextMenu.ItemContainerStyle>
						<Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MenuItemStyle}">
							<Setter Property="Command" Value="{Binding Main.LunchMaxCommand, Source={StaticResource Locator}}" />
							<Setter Property="CommandParameter" Value="{Binding}" />
						</Style>
					</ContextMenu.ItemContainerStyle>
				</ContextMenu>
			</controls:SgzSplitButton.ContextMenu>
			<controls:SgzSplitButton.ItemTemplate>
				<DataTemplate >
					<TextBlock Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MenuItem}}}"
							   Text="{Binding Title}"/>
				</DataTemplate>
			</controls:SgzSplitButton.ItemTemplate>
			<controls:SgzSplitButton.ItemContainerStyle>
				<Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MenuItemStyle}">
					<Setter Property="IsCheckable" Value="True" />
					<Setter Property="IsChecked" Value="{Binding IsChecked}" />
				</Style>
			</controls:SgzSplitButton.ItemContainerStyle>
		</controls:SgzSplitButton>

	</StackPanel>
	
</UserControl>
