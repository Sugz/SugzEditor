<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:SugzEditor.Controls">

	<Style x:Key="{x:Type local:SgzSplitButton}" TargetType="{x:Type local:SgzSplitButton}">
		<Setter Property="Foreground" Value="{DynamicResource MainForeground}" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Margin" Value="0,0,2,0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type local:SgzSplitButton}">
					<Grid x:Name="PART_Grid" Background="Transparent">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="1" />
							<ColumnDefinition Width="10" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="30" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Border x:Name="PART_Button" 
								Background="Transparent">
							<ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
											  Margin="{TemplateBinding Padding}" 
											  Width="{TemplateBinding ButtonWidth}"/>
						</Border>
						<Rectangle x:Name="PART_Rect" 
								   Grid.Column="1" 
								   Fill="Transparent" />
						<Border x:Name="PART_Toggle" 
								Background="Transparent" 
								Grid.Column="2">
							<Path x:Name="arrow" 
								  Fill="{TemplateBinding Foreground}" 
								  Data="M 0,0 L6,0 L3,3 Z" 
								  VerticalAlignment="Center" 
								  HorizontalAlignment="Center" 
								  Margin="0,3,0,-1" />
						</Border>

						<Popup x:Name="PART_Popup" 
							   Grid.Row="1" 
							   StaysOpen="True" 
							   PopupAnimation="Fade" 
							   IsOpen="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
							   SnapsToDevicePixels="True" 
							   UseLayoutRounding="True">
							<Border Background="{DynamicResource MainBackground}" 
									BorderBrush="{DynamicResource ToolbarBorderBrush}" 
									BorderThickness="1" 
									SnapsToDevicePixels="True" 
									UseLayoutRounding="True">
								<StackPanel IsItemsHost="True" 
											Margin="2" />
							</Border>
						</Popup>

					</Grid>

					<ControlTemplate.Triggers>

						<Trigger Property="IsToggleMouseOver" Value="True">
							<Setter TargetName="PART_Button" Property="Background" Value="{DynamicResource ToolbarMouseHover}" />
							<Setter TargetName="PART_Toggle" Property="Background" Value="{DynamicResource ToolbarMouseHover}" />
						</Trigger>

						<Trigger Property="IsTogglePressed" Value="True">
							<Setter TargetName="PART_Grid" Property="Background" Value="{DynamicResource ToolbarMouseDown}" />
							<Setter TargetName="PART_Button" Property="Background" Value="Transparent" />
							<Setter TargetName="PART_Toggle" Property="Background" Value="Transparent" />
						</Trigger>

						<Trigger Property="IsButtonMouseOver" Value="True">
							<Setter TargetName="PART_Button" Property="Background" Value="{DynamicResource ToolbarMouseHover}" />
						</Trigger>

						<Trigger Property="IsButtonPressed" Value="True">
							<Setter TargetName="PART_Button" Property="Background" Value="{DynamicResource ToolbarMouseDown}" />
						</Trigger>

						<Trigger Property="IsExpanded" Value="True">
							<Setter TargetName="PART_Grid" Property="Background" Value="{DynamicResource ToolbarMouseDown}" />
							<Setter TargetName="PART_Button" Property="Background" Value="Transparent" />
							<Setter TargetName="PART_Toggle" Property="Background" Value="Transparent" />
						</Trigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="HasItems" Value="False"/>
								<Condition Property="AllowDisableExpand" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_Toggle" Property="IsEnabled" Value="False" />
							<Setter TargetName="arrow" Property="Fill" Value="{DynamicResource DisabledForeground}" />
						</MultiTrigger>
						<!--<DataTrigger Binding="{Binding HasItems, RelativeSource={RelativeSource Self}}" Value="False">
							<Setter TargetName="PART_Toggle" Property="IsEnabled" Value="False" />
							<Setter TargetName="arrow" Property="Fill" Value="{DynamicResource DisabledForeground}" />
						</DataTrigger>-->

					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

	</Style>

</ResourceDictionary>