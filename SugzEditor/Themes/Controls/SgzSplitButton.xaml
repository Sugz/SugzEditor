<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:local="clr-namespace:SugzEditor.Controls" 
                    xmlns:conv="clr-namespace:SugzEditor.Themes.Converters">

    <conv:ItemsCountToBoolConverter x:Key="ItemsCountToBool" />


    <Style x:Key="{x:Type local:SgzSplitButton}" TargetType="{x:Type local:SgzSplitButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource MainForeground}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,0,2,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SgzSplitButton}">
                    <Grid x:Name="PART_Grid"
                          Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30" />
                            <ColumnDefinition Width="1" />
                            <ColumnDefinition Width="10" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border x:Name="PART_Button" 
                                Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" />
                        </Border>
                        <Rectangle x:Name="PART_Rect"
                                   Grid.Column="1" 
                                   Fill="{TemplateBinding Background}" />
                        <Border x:Name="PART_Toggle" 
                                Background="{TemplateBinding Background}"
                                Grid.Column="2">
                            <Path x:Name="arrow" 
                                  Fill="{TemplateBinding Foreground}" 
                                  Data="M 0,0 L6,0 L3,3 Z" 
                                  VerticalAlignment="Center" 
                                  HorizontalAlignment="Center" 
                                  Margin="0,3,0,-1"/>
                        </Border>
                        
                        <Popup x:Name="PART_Popup" 
                               Grid.Row="1"
                               StaysOpen="True" 
                               PopupAnimation="Fade"
                               IsOpen="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            <Border Background="{DynamicResource MainBackground}"
                                    BorderBrush="{DynamicResource ToolbarBorderBrush}"
                                    BorderThickness="1">
                                <StackPanel IsItemsHost="True" 
                                            Margin="2"/>
                            </Border>
                        </Popup>
                        
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsButtonMouseOver" Value="False" />
                                <Condition Property="HasItems" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Button" Property="Background" Value="{DynamicResource ToolbarMouseHover}" />
                            <Setter TargetName="PART_Toggle" Property="Background" Value="{DynamicResource ToolbarMouseHover}" />
                        </MultiTrigger>-->
                        
                        <Trigger Property="IsButtonMouseOver" Value="True">
                            <Setter TargetName="PART_Button" Property="Background" Value="{DynamicResource ToolbarMouseHover}" />
                        </Trigger>
                        
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsExpanded" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Button" Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_Toggle" Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" />
                        </MultiTrigger>
                        
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_Button" Property="Background" Value="{DynamicResource ToolbarMouseDown}" />
                            <Setter TargetName="PART_Toggle" Property="Background" Value="{DynamicResource ToolbarMouseDown}" />
                        </Trigger>-->
                        
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="PART_Grid" Property="Background" Value="{DynamicResource ToolbarMouseDown}" />
                        </Trigger>

                        <Trigger Property="HasItems " Value="False">
                            <Setter TargetName="PART_Toggle" Property="IsEnabled" Value="False" />
                            <Setter TargetName="arrow" Property="Fill" Value="{DynamicResource DisabledForeground}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
    </Style>


    <Style x:Key="SgzSplitButtonToggle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="Transparent">
                        <Path x:Name="arrow" 
                                Fill="{TemplateBinding Foreground}" 
                                Data="M 0,0 L6,0 L3,4 Z" 
                                Stretch="None" 
                                Margin="0,3,0,-1" 
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="{x:Type local:SgzSplitButtonNew}" TargetType="{x:Type local:SgzSplitButtonNew}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SgzSplitButtonNew}">
                    <Grid x:Name="grid" 
                          Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <DockPanel x:Name="Header">
                            <ToggleButton x:Name="PART_Toggle" 
                                          Background="Transparent" 
                                          Width="10" 
                                          DockPanel.Dock="Right"
                                          ClickMode="Press" 
                                          BorderBrush="{x:Null}" 
                                          Foreground="#FFB4B4B4"
                                          IsChecked="{TemplateBinding IsOpen}">
                                
                            </ToggleButton>
                            <Rectangle x:Name="PART_Rect" 
                                       Width="1" 
                                       DockPanel.Dock="Right"/>
                            <Border x:Name="PART_Button"
                                    Width="30"
                                    Background="Transparent">
                                <ContentPresenter />
                            </Border>
                        </DockPanel>

                        <Popup x:Name="PART_Popup" 
                               Grid.Row="1"
                               StaysOpen="False"
                               IsOpen="{Binding IsChecked, ElementName=PART_Toggle}">
                            <Border Background="{DynamicResource MainBackground}"
                                    BorderBrush="{DynamicResource ToolbarBorderBrush}"
                                    BorderThickness="1">
                                <StackPanel IsItemsHost="True" 
                                            Margin="2"/>
                            </Border>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="ButtonIsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Button" Property="Background" Value="{DynamicResource ToolbarMouseHover}" />
                            <Setter TargetName="PART_Toggle" Property="Background" Value="{DynamicResource ToolbarMouseHover}" />
                        </MultiTrigger>
                        <Trigger Property="ToggleIsMouseDown" Value="True">
                            <Setter TargetName="grid" Property="Background" Value="{DynamicResource ToolbarMouseDown}" />
                        </Trigger>
                        <Trigger Property="ButtonIsMouseOver" Value="True">
                            <Setter TargetName="PART_Button" Property="Background" Value="{DynamicResource ToolbarMouseHover}" />
                        </Trigger>
                        <Trigger Property="ButtonIsMouseDown" Value="True">
                            <Setter TargetName="PART_Button" Property="Background" Value="{DynamicResource ToolbarMouseDown}" />
                        </Trigger>
                        <Trigger Property="IsOpen" Value="True">
                            <Setter TargetName="grid" Property="Background" Value="{DynamicResource ToolbarMouseDown}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="SplitButtonMainButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ToolbarMouseHover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ToolbarMouseDown}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    
    <ControlTemplate x:Key="SplitButtonTemplate" TargetType="{x:Type local:SplitButton}">
        <Border x:Name="PART_Border"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                UseLayoutRounding="True">
            <Grid x:Name="PART_Container"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="1" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Button x:Name="PART_Button" 
                        Style="{StaticResource SplitButtonMainButtonStyle}"
                        Command="{TemplateBinding Command}"
                        CommandParameter="{TemplateBinding CommandParameter}"
                        CommandTarget="{TemplateBinding CommandTarget}"
                        FocusVisualStyle="{TemplateBinding FocusVisualStyle}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        Content="{TemplateBinding Content}"/>
                <Rectangle x:Name="PART_Rect" 
                           Grid.Column="1" 
                           Fill="Transparent"  />
                <Button x:Name="PART_Expander"
                        Grid.Column="2"
                        Width="10"
                        FocusVisualStyle="{TemplateBinding FocusVisualStyle}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        Style="{StaticResource SplitButtonMainButtonStyle}">
                    <Path x:Name="arrow" 
                          Fill="{TemplateBinding Foreground}" 
                          Data="M 0,0 L6,0 L3,3 Z" 
                          VerticalAlignment="Center" 
                          HorizontalAlignment="Center" 
                          Margin="0,3,0,-1" />
                </Button>
                <Popup x:Name="PART_Popup"
                       MinWidth="{TemplateBinding ActualWidth}"
                       IsOpen="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                       PlacementTarget="{Binding ElementName=PART_Button}"
                       PopupAnimation="Fade"
                       StaysOpen="True">
                    <Border Background="{DynamicResource MainBackground}"
                            BorderBrush="{DynamicResource ToolbarBorderBrush}"
                            BorderThickness="1">
                        <StackPanel IsItemsHost="True" 
                                    Margin="2"/>
                    </Border>
                </Popup>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ToggleIsMouseOver" Value="True" />
                    <Condition Property="ToggleIsPressed" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Button" Property="Background" Value="{DynamicResource ToolbarMouseHover}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ToggleIsMouseOver" Value="True" />
                    <Condition Property="ToggleIsPressed" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Border" Property="Background" Value="{DynamicResource ToolbarMouseDown}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ToggleIsMouseOver" Value="True" />
                    <Condition Property="IsExpanded" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Border" Property="Background" Value="{DynamicResource ToolbarMouseDown}" />
            </MultiTrigger>
            <Trigger Property="IsExpanded" Value="True">
                <Setter TargetName="PART_Border" Property="Background" Value="{DynamicResource ToolbarMouseDown}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ButtonSplitFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="1"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeThickness="1"
                               SnapsToDevicePixels="true"
                               StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type local:SplitButton}" TargetType="{x:Type local:SplitButton}">
        <Setter Property="ArrowBrush" Value="{DynamicResource MainForeground}" />
        <Setter Property="Foreground" Value="{DynamicResource MainForeground}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonSplitFocusVisual}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="41" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template" Value="{StaticResource SplitButtonTemplate}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value=".55" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>